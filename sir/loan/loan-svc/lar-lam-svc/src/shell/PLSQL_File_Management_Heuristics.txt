Organisation: Glen_Bank 
ProjectDescription:
The Banking Management System, located in the BANK directory with an entry point in PLSQL_DDL, focuses on efficient file processing and management in the banking sector. It serves a variety of stakeholders, including File Processors, System Administrators, and Compliance Officers. Key modules include: Configuration Management for dynamic system configurations, File Processing and Archival for seamless file handling, and Error Handling and Reporting for robust error management and compliance. This system enhances operational efficiency and ensures data integrity.


Rootsnippet directory: File_Management
Entry point directory: PLSQL_DDL

"line_of_business": "Banking_Management",
"sector": "Banking_Management",
"focus_area": "File Processing and Management",

"actors": [
		"File Processor"
		"System Administrator"
		"Compliance Officer"
        	"Accounts Manager",
		"Database Administrator",
		
           ],
"functional_modules": [
	{
		"name": "Configuration Management",
		"description": "Handles the loading and retrieval of configuration values essential for file processing.
Uses a global table to store configuration data dynamically.
Implements procedures like load_configuration to initialize configuration values.
Provides functions such as get_config_value to retrieve specific configuration keys."
	},
	{
		"name": "File Processing and Archival",
		"description": "Manages the end-to-end lifecycle of file processing, including initialization, record handling, and archival.
Processes files using the process_file procedure, which reads, processes, and archives files.
Utilizes configuration values like MAX_RECORDS to control the number of records processed per file.
Archives processed files to a designated directory using the archive_file procedure.."
	},
	{
		"name": "Error Handling and Reporting",
		"description": "Provides robust error handling and reporting mechanisms to ensure compliance and traceability.
Logs errors using the log_error procedure.
Handles exceptions gracefully, ensuring no data loss during processing.
Generates detailed reports for processed files using the generate_report procedure."
	},
	{
		"name": "Data Cleanup and Calculations",
		"description": "Supports auxiliary operations to maintain data integrity and provide insights.
Cleans up temporary data after file processing using the clean_up_temp_data procedure.
Calculates metrics like the average amount per record using the calculate_average_amount function."
	},
	{
		"name": "Bank File Processing",
		"description": "Extends file processing capabilities to handle bank-specific file operations..
Processes bank files using the process_bank_file procedure.
Inserts metadata into temp_bank_files and temp_transactions tables.
Simulates bank transactions with attributes such as transaction amount and status."
	}

		